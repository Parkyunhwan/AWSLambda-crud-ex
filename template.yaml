# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  sam-kanban

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
  - AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 3
    Handler: app.handler
    Runtime: nodejs12.x
    #Layers:

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  DynamoDB:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      TableName: Cards

  APIGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: Kanban API Gateway
      StageName: prod

  GetCardsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetCards
      CodeUri: lambda/getcards
      Role: arn:aws:iam::702313069121:role/Lambda_Kanban_Role
      Events:
        Trigger:
          Type: Api
          Properties:
            Path: /kanban/cards
            Method: GET
            Auth:
              ApiKeyRequired: true
            RestApiId: !Ref APIGateway

  PostCardsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PostCards
      CodeUri: lambda/postcard
      Role: arn:aws:iam::702313069121:role/Lambda_Kanban_Role
      Events:
        Trigger:
          Type: Api
          Properties:
            Path: /kanban/cards
            Method: post
            Auth:
              ApiKeyRequired: true
            RestApiId: !Ref APIGateway

  PutCardFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PutCards
      CodeUri: lambda/putcard
      Role: arn:aws:iam::702313069121:role/Lambda_Kanban_Role
      Events:
        Trigger:
          Type: Api
          Properties:
            Path: /kanban/cards/{id}
            Method: put
            Auth:
              ApiKeyRequired: true
            RestApiId: !Ref APIGateway

  DeleteCardFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DeleteCard
      CodeUri: lambda/deletecard
      Role: arn:aws:iam::702313069121:role/Lambda_Kanban_Role
      Events:
        Trigger:
          Type: Api
          Properties:
            Path: /kanban/cards/{id}
            Method: delete
            Auth:
              ApiKeyRequired: true
            RestApiId: !Ref APIGateway

Outputs:
  APIGateway:
    Description: "API Gateway endpoint URL for Prod stage for kanban project"
    Value: !Sub "https://${APIGateway}.execute-api.${AWS::Region}.amazonaws.com/prod"
